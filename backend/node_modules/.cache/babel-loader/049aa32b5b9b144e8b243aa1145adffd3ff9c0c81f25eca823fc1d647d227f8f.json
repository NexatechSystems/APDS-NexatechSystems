{"ast":null,"code":"import React,{useState}from\"react\";import DOMPurify from'dompurify';// For XSS prevention\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Login=props=>{const[idNumber,setIdNumber]=useState('');const[accountNumber,setAccountNumber]=useState('');const[pass,setPass]=useState('');const[userType,setUserType]=useState('customer');// Default to 'customer'\nconst handleSubmit=async e=>{e.preventDefault();// Prepend the appropriate prefix based on user type\nconst prefixedAccountNumber=userType==='customer'?`cust${accountNumber}`:`emp${accountNumber}`;// Send the login request\nconst response=await fetch('https://localhost:3001/api/users/login',{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',// Ensure cookies are included in the request\nmode:'cors',body:JSON.stringify({idNumber,accountNumber:prefixedAccountNumber,password:pass})});const data=await response.text();if(response.status===200){alert('Login successful!');if(prefixedAccountNumber.startsWith('cust')){props.onFormSwitch('dashboard');// Redirect to customer dashboard\n}else if(prefixedAccountNumber.startsWith('emp')){props.onFormSwitch('employeesDashboard');// Redirect to employee dashboard\n}}else{alert('Invalid credentials. Please try again.');}console.log(data);};return/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"idNumber\",children:\"ID Number\"}),/*#__PURE__*/_jsx(\"input\",{value:DOMPurify.sanitize(idNumber),onChange:e=>setIdNumber(e.target.value),type:\"text\",placeholder:\"Your ID Number\",id:\"idNumber\",name:\"idNumber\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"accountNumber\",children:\"Account Number\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-number-container\",children:[/*#__PURE__*/_jsxs(\"select\",{value:userType,onChange:e=>setUserType(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"customer\",children:\"Customer\"}),/*#__PURE__*/_jsx(\"option\",{value:\"employee\",children:\"Employee\"})]}),/*#__PURE__*/_jsx(\"input\",{value:DOMPurify.sanitize(accountNumber),onChange:e=>setAccountNumber(e.target.value),type:\"text\",placeholder:\"Account Number (e.g 0002)\",id:\"accountNumber\",name:\"accountNumber\"})]}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{value:pass,onChange:e=>setPass(e.target.value),type:\"password\",placeholder:\"***********\",id:\"password\",name:\"password\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Log In\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"link-btn\",onClick:()=>props.onFormSwitch('register'),children:\"Don't have an account? Register\"})]});};","map":{"version":3,"names":["React","useState","DOMPurify","jsx","_jsx","jsxs","_jsxs","Login","props","idNumber","setIdNumber","accountNumber","setAccountNumber","pass","setPass","userType","setUserType","handleSubmit","e","preventDefault","prefixedAccountNumber","response","fetch","method","headers","credentials","mode","body","JSON","stringify","password","data","text","status","alert","startsWith","onFormSwitch","console","log","className","children","onSubmit","htmlFor","value","sanitize","onChange","target","type","placeholder","id","name","onClick"],"sources":["C:/Users/hoque/payments-portal/src/frontend/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DOMPurify from 'dompurify';  // For XSS prevention\r\n\r\nexport const Login = (props) => {\r\n    const [idNumber, setIdNumber] = useState('');\r\n    const [accountNumber, setAccountNumber] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [userType, setUserType] = useState('customer'); // Default to 'customer'\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Prepend the appropriate prefix based on user type\r\n        const prefixedAccountNumber = userType === 'customer' ? `cust${accountNumber}` : `emp${accountNumber}`;\r\n\r\n        // Send the login request\r\n        const response = await fetch('https://localhost:3001/api/users/login',  \r\n        {\r\n            method: 'POST',\r\n            headers: \r\n            {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include', // Ensure cookies are included in the request\r\n            mode: 'cors',\r\n            body: JSON.stringify({ idNumber, accountNumber: prefixedAccountNumber, password: pass }),\r\n        });\r\n\r\n        const data = await response.text();\r\n        if (response.status === 200) \r\n        {\r\n            alert('Login successful!');\r\n            if (prefixedAccountNumber.startsWith('cust')) {\r\n                props.onFormSwitch('dashboard'); // Redirect to customer dashboard\r\n            } else if (prefixedAccountNumber.startsWith('emp')) {\r\n                props.onFormSwitch('employeesDashboard'); // Redirect to employee dashboard\r\n            }\r\n        } \r\n        else \r\n        {\r\n            alert('Invalid credentials. Please try again.');\r\n        }\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n    <h2>Login</h2>\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"idNumber\">ID Number</label>\r\n        <input\r\n            value={DOMPurify.sanitize(idNumber)}\r\n            onChange={(e) => setIdNumber(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Your ID Number\"\r\n            id=\"idNumber\"\r\n            name=\"idNumber\"\r\n        />\r\n        <label htmlFor=\"accountNumber\">Account Number</label>\r\n        <div className=\"account-number-container\">\r\n            <select \r\n                value={userType} \r\n                onChange={(e) => setUserType(e.target.value)}\r\n            >\r\n                <option value=\"customer\">Customer</option>\r\n                <option value=\"employee\">Employee</option>\r\n            </select>\r\n            <input\r\n                value={DOMPurify.sanitize(accountNumber)}\r\n                onChange={(e) => setAccountNumber(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Account Number (e.g 0002)\"\r\n                id=\"accountNumber\"\r\n                name=\"accountNumber\"\r\n            />\r\n        </div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n            value={pass}\r\n            onChange={(e) => setPass(e.target.value)}\r\n            type=\"password\"\r\n            placeholder=\"***********\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n        />\r\n        <button type=\"submit\">Log In</button>\r\n    </form>\r\n    <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>\r\n        Don't have an account? Register\r\n    </button>\r\n</div>\r\n\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}