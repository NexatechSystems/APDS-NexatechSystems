{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hoque\\\\payments-portal\\\\src\\\\frontend\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DOMPurify from 'dompurify'; // For XSS prevention\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [idNumber, setIdNumber] = useState('');\n  const [accountNumber, setAccountNumber] = useState('');\n  const [pass, setPass] = useState('');\n  const [userType, setUserType] = useState('customer'); // Default to 'customer'\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Prepend the appropriate prefix based on user type\n    const prefixedAccountNumber = userType === 'customer' ? `cust${accountNumber}` : `emp${accountNumber}`;\n\n    // Send the login request\n    const response = await fetch('http://localhost:3001/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      // Ensure cookies are included in the request\n      mode: 'cors',\n      body: JSON.stringify({\n        idNumber,\n        accountNumber: prefixedAccountNumber,\n        password: pass\n      })\n    });\n    const data = await response.text();\n    if (response.status === 200) {\n      alert('Login successful!');\n      if (prefixedAccountNumber.startsWith('cust')) {\n        props.onFormSwitch('dashboard'); // Redirect to customer dashboard\n      } else if (prefixedAccountNumber.startsWith('emp')) {\n        props.onFormSwitch('employeesDashboard'); // Redirect to employee dashboard\n      }\n    } else {\n      alert('Invalid credentials. Please try again.');\n    }\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"idNumber\",\n        children: \"ID Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: DOMPurify.sanitize(idNumber),\n        onChange: e => setIdNumber(e.target.value),\n        type: \"text\",\n        placeholder: \"Your ID Number\",\n        id: \"idNumber\",\n        name: \"idNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"accountNumber\",\n        children: \"Account Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account-number-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: userType,\n          onChange: e => setUserType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customer\",\n            children: \"Customer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"employee\",\n            children: \"Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: DOMPurify.sanitize(accountNumber),\n          onChange: e => setAccountNumber(e.target.value),\n          type: \"text\",\n          placeholder: \"Account Number (e.g 0002)\",\n          id: \"accountNumber\",\n          name: \"accountNumber\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: pass,\n        onChange: e => setPass(e.target.value),\n        type: \"password\",\n        placeholder: \"***********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => props.onFormSwitch('register'),\n      children: \"Don't have an account? Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"IN6lkMJ3P8xV2EFZDfuD+oB07Ds=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","DOMPurify","jsxDEV","_jsxDEV","Login","props","_s","idNumber","setIdNumber","accountNumber","setAccountNumber","pass","setPass","userType","setUserType","handleSubmit","e","preventDefault","prefixedAccountNumber","response","fetch","method","headers","credentials","mode","body","JSON","stringify","password","data","text","status","alert","startsWith","onFormSwitch","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","sanitize","onChange","target","type","placeholder","id","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hoque/payments-portal/src/frontend/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DOMPurify from 'dompurify';  // For XSS prevention\r\n\r\nexport const Login = (props) => {\r\n    const [idNumber, setIdNumber] = useState('');\r\n    const [accountNumber, setAccountNumber] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [userType, setUserType] = useState('customer'); // Default to 'customer'\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Prepend the appropriate prefix based on user type\r\n        const prefixedAccountNumber = userType === 'customer' ? `cust${accountNumber}` : `emp${accountNumber}`;\r\n\r\n        // Send the login request\r\n        const response = await fetch('http://localhost:3001/api/users/login',  \r\n        {\r\n            method: 'POST',\r\n            headers: \r\n            {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            credentials: 'include', // Ensure cookies are included in the request\r\n            mode: 'cors',\r\n            body: JSON.stringify({ idNumber, accountNumber: prefixedAccountNumber, password: pass }),\r\n        });\r\n\r\n        const data = await response.text();\r\n        if (response.status === 200) \r\n        {\r\n            alert('Login successful!');\r\n            if (prefixedAccountNumber.startsWith('cust')) {\r\n                props.onFormSwitch('dashboard'); // Redirect to customer dashboard\r\n            } else if (prefixedAccountNumber.startsWith('emp')) {\r\n                props.onFormSwitch('employeesDashboard'); // Redirect to employee dashboard\r\n            }\r\n        } \r\n        else \r\n        {\r\n            alert('Invalid credentials. Please try again.');\r\n        }\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-form-container\">\r\n    <h2>Login</h2>\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"idNumber\">ID Number</label>\r\n        <input\r\n            value={DOMPurify.sanitize(idNumber)}\r\n            onChange={(e) => setIdNumber(e.target.value)}\r\n            type=\"text\"\r\n            placeholder=\"Your ID Number\"\r\n            id=\"idNumber\"\r\n            name=\"idNumber\"\r\n        />\r\n        <label htmlFor=\"accountNumber\">Account Number</label>\r\n        <div className=\"account-number-container\">\r\n            <select \r\n                value={userType} \r\n                onChange={(e) => setUserType(e.target.value)}\r\n            >\r\n                <option value=\"customer\">Customer</option>\r\n                <option value=\"employee\">Employee</option>\r\n            </select>\r\n            <input\r\n                value={DOMPurify.sanitize(accountNumber)}\r\n                onChange={(e) => setAccountNumber(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Account Number (e.g 0002)\"\r\n                id=\"accountNumber\"\r\n                name=\"accountNumber\"\r\n            />\r\n        </div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n            value={pass}\r\n            onChange={(e) => setPass(e.target.value)}\r\n            type=\"password\"\r\n            placeholder=\"***********\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n        />\r\n        <button type=\"submit\">Log In</button>\r\n    </form>\r\n    <button className=\"link-btn\" onClick={() => props.onFormSwitch('register')}>\r\n        Don't have an account? Register\r\n    </button>\r\n</div>\r\n\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}